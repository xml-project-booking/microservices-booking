syntax = "proto3";

option go_package = "github.com/tamararankovic/microservices_demo/common/users";

package users;


import "google/api/annotations.proto";

service UserService{
  rpc Get(GetRequest) returns(GetResponse) {
    option (google.api.http) = {
      get: "/users/user/{id}"
    };
  }
  rpc ExistsUsername(ExistsUsernameRequest) returns(ExistsUsernameResponse) {
    option (google.api.http) = {
      get: "/users/user/existsUsername/{username}"
    };
  }
  rpc ExistsEmail(ExistsEmailRequest) returns(ExistsEmailResponse) {
    option (google.api.http) = {
      get: "/users/user/existsEmail/{email}"
    };
  }
  rpc GetAll(GetAllRequest) returns(GetAllResponse) {
    option (google.api.http) = {
      get: "/users/user"
    };
  }

  rpc Authenticate(AuthenticateRequest) returns(AuthenticateResponse) {
    option (google.api.http) = {
      get: "/users/authenticate/{token}"
    };
  }
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/users/login"
      body: "*"
    };
  }

  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/users/register"
      body: "*"
    };
  }

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/users/update"
      body: "*"
    };
  }
  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/users/delete/{id}"
    };
  }
  rpc GetProminentHosts(GetProminentHostRequest) returns (GetProminentHostResponse) {
    option (google.api.http) = {
      get: "/users/prominent-host"
    };
  }


  rpc UpdateCancellationNumber(UpdateCancellationNumberRequest) returns(UpdateCancellationNumberResponse) {
    option (google.api.http) = {
      get: "/users/cancellation/{id}"
    };
  }

}
message GetProminentHostRequest{

}
message GetProminentHostResponse {
  repeated string hostsID = 1;
}
message GetRequest {
  string id = 1;
}

message GetResponse {
  User user = 1;
}

message ExistsUsernameRequest {
  string username = 1;
}
message UpdateCancellationNumberRequest{
  string id = 1;
}
message UpdateCancellationNumberResponse{
  string cancelNumber = 1;

}

message ExistsUsernameResponse {
  bool exists = 1;
}
message ExistsEmailRequest {
  string email = 1;
}

message ExistsEmailResponse {
  bool exists = 1;
}
message GetAllRequest {
}

message GetAllResponse {
  repeated User users = 1;
}

message User {
  string id = 1;
  string name = 2;
  string surname = 3;
  string username = 4;
  string email = 5;
  string address = 6;
  bool isHost = 7;
  int64 CancellationNumber = 8;

}

message AuthenticateRequest {
    string token = 1;
}

message AuthenticateResponse {
    string message = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
    RequestResult requestResult = 1;
    string token = 2;
    string role = 3;
    string id = 4;
}
message RegisterRequest {
    string username = 1;
    string password = 2;
    bool isHost = 3;
    string name = 4;
    string surname = 5;
    string email = 6;
    string address = 7;
}

message RegisterResponse {
    RequestResult requestResult = 1;
    string token = 2;
}
message UpdateUserRequest {
  string id = 1;
  string username = 2;
  string password = 3;
  string name = 4;
  string surname = 5;
  string email = 6;
  string address = 7;
}

message UpdateUserResponse {
  RequestResult requestResult = 1;
}

message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  RequestResult requestResult = 1;
}
message RequestResult {
    int32 code = 1;
    string message = 2;
  int64 CancellationNumber  = 3;

}
